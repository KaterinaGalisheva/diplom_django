
import logging
import string
import json
from aiogram import  Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

# –∏ –∏–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–æ–≤
from bot_app import text


# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(filename='errors.log', level=logging.INFO)


router_other = Router()


#----------------OTHER------------------------

# —Ö–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞
@router_other.message() # –ø—É—Å—Ç–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –≤ –∫–æ–Ω–µ—Ü!!!
async def echo_send(message: Message, state: FSMContext):
    await state.clear()
    logging.info('–°—Ä–∞–±–æ—Ç–∞–ª —Ü–µ–Ω–∑')
    # –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–∞    
    with open('cenz/cenz.json', 'r') as file:
            bad_words = set(json.load(file))

    # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–∞
    if {i.lower().translate(str.maketrans('', '', string.punctuation)) for i in message.text.split(' ')}\
        .intersection(bad_words) != set():
        await message.reply('–ù–µ —Ä—É–≥–∞–π—Å—è üíî')
        await message.delete()
    else:
        await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.' + text.help)



# –≤ –∫–æ–Ω—Ü–µ, –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ –Ω–µ—Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@router_other.message() 
async def all_message(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('üë© –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ @clevereej')
    

#----------------END-OTHER------------------------